// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoApp.Infrastructure.Persistences;

#nullable disable

namespace TodoApp.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TodoApp.Domain.Entities.Assignment", b =>
                {
                    b.Property<int>("AssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssignmentId"), 1L, 1);

                    b.Property<DateTime>("AssignedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PublicId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TaskItemId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AssignmentId");

                    b.HasIndex("TaskItemId");

                    b.HasIndex("UserId");

                    b.ToTable("Assignments");

                    b.HasData(
                        new
                        {
                            AssignmentId = 1,
                            AssignedAt = new DateTime(2025, 10, 19, 16, 57, 42, 36, DateTimeKind.Local).AddTicks(9013),
                            PublicId = new Guid("87f151d3-1dc6-4153-bd6f-2101292351f7"),
                            TaskItemId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("TodoApp.Domain.Entities.TaskItem", b =>
                {
                    b.Property<int>("TaskItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskItemId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<Guid>("PublicId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TaskItemId");

                    b.HasIndex("UserId");

                    b.ToTable("TaskItems");

                    b.HasData(
                        new
                        {
                            TaskItemId = 1,
                            CreatedAt = new DateTime(2025, 10, 19, 16, 57, 42, 36, DateTimeKind.Local).AddTicks(8946),
                            Deadline = new DateTime(2025, 10, 20, 16, 57, 42, 36, DateTimeKind.Local).AddTicks(8942),
                            Description = "Buy milk, eggs, and bread",
                            Priority = 2,
                            PublicId = new Guid("039ddee3-aeb1-4f10-9b48-18c1291dde44"),
                            Status = 1,
                            Title = "Buy groceries",
                            UpdatedAt = new DateTime(2025, 10, 19, 16, 57, 42, 36, DateTimeKind.Local).AddTicks(8947),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("TodoApp.Domain.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PublicId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedAt = new DateTime(2025, 10, 19, 16, 57, 42, 36, DateTimeKind.Local).AddTicks(8744),
                            Email = "admin@gmail.com",
                            PasswordHash = "$2a$12$eIXh4XkH9sVg6F1u9kHq8uKz0OQh4f0QJzRuj5bFf9JzGJ8tQ3LxG",
                            PublicId = new Guid("84ce71cd-d757-402c-b748-57ef581ac0de"),
                            UpdatedAt = new DateTime(2025, 10, 19, 16, 57, 42, 36, DateTimeKind.Local).AddTicks(8806),
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("TodoApp.Domain.Entities.Assignment", b =>
                {
                    b.HasOne("TodoApp.Domain.Entities.TaskItem", "TaskItem")
                        .WithMany("Assignments")
                        .HasForeignKey("TaskItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TodoApp.Domain.Entities.User", "User")
                        .WithMany("Assignments")
                        .HasForeignKey("UserId");

                    b.Navigation("TaskItem");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TodoApp.Domain.Entities.TaskItem", b =>
                {
                    b.HasOne("TodoApp.Domain.Entities.User", "User")
                        .WithMany("Tasks")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TodoApp.Domain.Entities.TaskItem", b =>
                {
                    b.Navigation("Assignments");
                });

            modelBuilder.Entity("TodoApp.Domain.Entities.User", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
